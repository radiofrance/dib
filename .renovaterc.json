{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    ":automergeDigest",
    ":automergeLinters",
    ":automergeMinor",
    ":automergePatch",
    ":automergePr",
    ":automergeRequireAllStatusChecks",
    ":automergeTesters",
    ":combinePatchMinorReleases",
    ":dependencyDashboard",
    ":enableVulnerabilityAlerts",
    ":gitSignOff",
    ":ignoreModulesAndTests",
    ":ignoreUnstable",
    ":label(dependencies)",
    ":maintainLockFilesMonthly",
    ":prConcurrentLimitNone",
    ":prHourlyLimitNone",
    ":prImmediately",
    ":semanticCommitScope(deps)",
    ":separateMultipleMajorReleases",
    "group:kubernetes",
    "helpers:pinGitHubActionDigests",
    "customManagers:dockerfileVersions"
  ],
  "packageRules": [
    {
      "description": "Update digest once a month",
      "matchUpdateTypes": [
        "digest"
      ],
      "extends": [
        "schedule:monthly"
      ]
    },
    {
      "description": "Group golang version bumps by datasource",
      "matchDatasources": [
        "golang-version"
      ],
      "groupName": "golang"
    },
    {
      "description": "Group golang version bumps by package",
      "matchPackageNames": [
        "go",
        "golang",
        "golang/go"
      ],
      "groupName": "golang"
    },
    {
      "description": "Group golangci-lint related bumps",
      "matchPackageNames": [
        "golangci/golangci-lint",
        "golangci/golangci-lint-action",
        "radiofrance/lint-config"
      ],
      "groupName": "golangci-lint",
      "groupSlug": "golangci-lint",
      "separateMinorPatch": false,
      "separateMajorMinor": false
    },
    {
      "description": "Update Go directives in go.mod files",
      "matchManagers": ["gomod"],
      "matchDepNames": ["go"],
      "matchDepTypes": ["golang"],
      "rangeStrategy": "bump"
    }
  ],
  "postUpdateOptions": [
    "gomodUpdateImportPaths",
    "gomodTidy"
  ],
  "customManagers": [
    {
      "description": "Update variables in Makefile and GitHub Actions files",
      "customType": "regex",
      "fileMatch": [
        "(^|/)Makefile$",
        "^\\.github/workflows/.*\\.ya?ml"
      ],
      "matchStrings": [
        "#\\s*renovate:\\s*datasource=(?<datasource>.*?) depName=(?<depName>.*?)(?: versioning=(?<versioning>.*?))?\\s+.*\\s*[:=]\\s*['\"]?(?<currentValue>.+?)['\"]?\\s"
      ]
    }
  ]
}
